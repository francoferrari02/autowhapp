{"ast":null,"code":"var _jsxFileName = \"/Users/francoferrari/Desktop/ITBA/IngeSoft/autowhapp/autowhapp-dashboard/src/components/Orders.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Button, TextField, Box, Modal, Switch, FormControlLabel } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport AddIcon from '@mui/icons-material/Add';\nimport axios from 'axios';\nimport { useNegocio } from '../NegocioContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BotStatusPedido = ({\n  active,\n  onToggle\n}) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n  control: /*#__PURE__*/_jsxDEV(Switch, {\n    checked: active,\n    onChange: onToggle,\n    color: \"primary\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 14\n  }, this),\n  label: active ? \"Módulo Pedido Activado\" : \"Módulo Pedido Desactivado\",\n  sx: {\n    fontWeight: 'bold',\n    userSelect: 'none'\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n_c = BotStatusPedido;\nconst Orders = () => {\n  _s();\n  const {\n    negocioId\n  } = useNegocio(); // Obtener el negocioId del contexto\n\n  const [orders, setOrders] = useState([]);\n  const [filter, setFilter] = useState('Todos');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [messages, setMessages] = useState({\n    recibido: 'Tu pedido ha sido recibido, te avisaremos pronto...',\n    preparando: 'Tu pedido está siendo preparado.',\n    enviado: 'Tu pedido está listo y en camino.'\n  });\n  const [openModal, setOpenModal] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Cargar pedidos y mensajes al montar el componente\n  useEffect(() => {\n    if (negocioId !== null) {\n      // Cargar pedidos\n      axios.get(`http://localhost:3000/api/pedidos/${negocioId}`).then(res => {\n        const pedidos = res.data.map(pedido => ({\n          id: pedido.id,\n          time: pedido.created_at || new Date().toLocaleTimeString(),\n          // Usamos la fecha actual si no hay created_at\n          status: pedido.estado.charAt(0).toUpperCase() + pedido.estado.slice(1),\n          // Capitalizamos el estado\n          client: 'Desconocido',\n          // No está en la base de datos\n          phone: pedido.numero_cliente,\n          items: pedido.producto,\n          total: 'N/A',\n          // No está en la base de datos\n          cantidad: pedido.cantidad\n        }));\n        setOrders(pedidos);\n      }).catch(err => {\n        console.error('Error al cargar pedidos:', err);\n        setMessage('Error al cargar pedidos');\n      });\n\n      // Cargar mensajes personalizados\n      axios.get(`http://localhost:3000/api/mensajes-pedidos/${negocioId}`).then(res => {\n        const mensajesGuardados = res.data.reduce((acc, msg) => {\n          acc[msg.tipo] = msg.mensaje;\n          return acc;\n        }, {});\n        setMessages(prev => ({\n          ...prev,\n          ...mensajesGuardados\n        }));\n      }).catch(err => {\n        console.error('Error al cargar mensajes de pedidos:', err);\n        setMessage('Error al cargar mensajes de pedidos');\n      });\n    }\n  }, [negocioId]);\n  const handleMessageChange = (key, value) => {\n    setMessages(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const saveMessages = () => {\n    if (negocioId === null) {\n      setMessage('Error: Negocio no identificado');\n      return;\n    }\n    axios.post('http://localhost:3000/api/mensajes-pedidos', {\n      negocio_id: negocioId,\n      mensajes: messages\n    }).then(() => {\n      setMessage('Mensajes guardados con éxito');\n    }).catch(err => {\n      console.error('Error al guardar mensajes:', err);\n      setMessage('Error al guardar mensajes');\n    });\n  };\n  const handleOpenModal = order => {\n    setSelectedOrder(order);\n    setOpenModal(true);\n  };\n  const handleCloseModal = () => {\n    setOpenModal(false);\n    setSelectedOrder(null);\n  };\n  const updateStatus = (orderId, newStatus) => {\n    if (negocioId === null) {\n      setMessage('Error: Negocio no identificado');\n      return;\n    }\n\n    // Actualizar el estado del pedido en el backend\n    axios.put(`http://localhost:3000/api/pedido/${orderId}/estado`, {\n      estado: newStatus.toLowerCase()\n    }).then(() => {\n      // Actualizar el estado localmente\n      setOrders(prevOrders => prevOrders.map(order => order.id === orderId ? {\n        ...order,\n        status: newStatus\n      } : order));\n      setMessage(`Estado del pedido ${orderId} actualizado a ${newStatus}`);\n    }).catch(err => {\n      console.error('Error al actualizar estado del pedido:', err);\n      setMessage('Error al actualizar estado del pedido');\n    });\n  };\n  const addNewOrder = () => {\n    if (negocioId === null) {\n      setMessage('Error: Negocio no identificado');\n      return;\n    }\n    const newOrder = {\n      negocioId,\n      numeroCliente: '+541123456789',\n      // Simulado\n      producto: 'Producto de prueba',\n      cantidad: 1\n    };\n    axios.post('http://localhost:3000/api/registrar-pedido', newOrder).then(res => {\n      const createdOrder = {\n        id: orders.length + 1,\n        // Esto debería venir del backend, pero lo simulamos por ahora\n        time: new Date().toLocaleTimeString(),\n        status: 'Recibido',\n        client: 'Desconocido',\n        phone: newOrder.numeroCliente,\n        items: newOrder.producto,\n        total: 'N/A',\n        cantidad: newOrder.cantidad.toString()\n      };\n      setOrders([createdOrder, ...orders]);\n      setMessage('Pedido añadido con éxito');\n    }).catch(err => {\n      console.error('Error al registrar pedido:', err);\n      setMessage('Error al registrar pedido');\n    });\n  };\n  const refreshOrders = () => {\n    if (negocioId === null) {\n      setMessage('Error: Negocio no identificado');\n      return;\n    }\n    axios.get(`http://localhost:3000/api/pedidos/${negocioId}`).then(res => {\n      const pedidos = res.data.map(pedido => ({\n        id: pedido.id,\n        time: pedido.created_at || new Date().toLocaleTimeString(),\n        status: pedido.estado.charAt(0).toUpperCase() + pedido.estado.slice(1),\n        client: 'Desconocido',\n        phone: pedido.numero_cliente,\n        items: pedido.producto,\n        total: 'N/A',\n        cantidad: pedido.cantidad\n      }));\n      setOrders(pedidos);\n      setMessage('Pedidos actualizados');\n    }).catch(err => {\n      console.error('Error al actualizar pedidos:', err);\n      setMessage('Error al actualizar pedidos');\n    });\n  };\n  const filteredOrders = orders.filter(order => {\n    if (filter === 'Todos') return true;\n    if (filter === 'Recibidos') return order.status === 'Recibido';\n    if (filter === 'Enviados') return order.status === 'Enviado';\n    return true;\n  }).filter(order => (order.phone || '').toLowerCase().includes(searchTerm.toLowerCase())); // Filtramos por número de teléfono\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 1000,\n      mx: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        p: 3,\n        mb: 4,\n        boxShadow: '0 0 7px 7px rgba(0,0,0,0.2)',\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Mensaje Pedido Recibido\",\n        fullWidth: true,\n        multiline: true,\n        rows: 2,\n        sx: {\n          mb: 2\n        },\n        value: messages.recibido,\n        onChange: e => handleMessageChange('recibido', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Mensaje Pedido Preparando\",\n        fullWidth: true,\n        multiline: true,\n        rows: 2,\n        sx: {\n          mb: 2\n        },\n        value: messages.preparando,\n        onChange: e => handleMessageChange('preparando', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Mensaje Pedido Enviado\",\n        fullWidth: true,\n        multiline: true,\n        rows: 2,\n        sx: {\n          mb: 3\n        },\n        value: messages.enviado,\n        onChange: e => handleMessageChange('enviado', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          backgroundColor: '#34C759',\n          '&:hover': {\n            backgroundColor: '#2EA44F'\n          },\n          borderRadius: 2\n        },\n        onClick: saveMessages,\n        children: \"Guardar Mensajes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        p: 2,\n        backgroundColor: 'white',\n        borderRadius: 2,\n        boxShadow: '0 0 7px 7px rgba(0,0,0,0.2)',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Buscar pedidos por tel\\xE9fono...\",\n        variant: \"outlined\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            sx: {\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 41\n          }, this)\n        },\n        sx: {\n          width: 300\n        },\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [['Todos', 'Recibidos', 'Enviados'].map(f => /*#__PURE__*/_jsxDEV(Button, {\n          variant: filter === f ? 'contained' : 'outlined',\n          sx: {\n            mr: 1,\n            backgroundColor: filter === f ? '#1E3A8A' : 'transparent',\n            color: filter === f ? '#FFFFFF' : '#1E3A8A',\n            '&:hover': {\n              backgroundColor: '#153E6F',\n              color: '#FFFFFF'\n            },\n            borderRadius: 2\n          },\n          onClick: () => setFilter(f),\n          children: f\n        }, f, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 24\n          }, this),\n          variant: \"contained\",\n          sx: {\n            mr: 1,\n            backgroundColor: '#1E3A8A',\n            '&:hover': {\n              backgroundColor: '#153E6F'\n            },\n            borderRadius: 2\n          },\n          onClick: refreshOrders,\n          children: \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 24\n          }, this),\n          variant: \"contained\",\n          sx: {\n            backgroundColor: '#34C759',\n            '&:hover': {\n              backgroundColor: '#2EA44F'\n            },\n            borderRadius: 2\n          },\n          onClick: addNewOrder,\n          children: \"Nuevo Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), [...filteredOrders].sort((a, b) => {\n      const toMinutes = t => {\n        const [h, m] = t.split(':').map(Number);\n        return h * 60 + m;\n      };\n      return toMinutes(b.time || '00:00') - toMinutes(a.time || '00:00');\n    }).map(order => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        boxShadow: '0 0 7px 7px rgba(0,0,0,0.2)',\n        borderRadius: 2,\n        mb: 2,\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontWeight: 'bold'\n            },\n            children: [\"Pedido \", order.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: order.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1,\n            flexWrap: 'wrap'\n          },\n          children: [['Recibido', 'Preparando', 'Enviado'].map(status => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => updateStatus(order.id, status),\n            sx: {\n              backgroundColor: order.status === status ? status === 'Recibido' ? '#9CA3AF' : status === 'Preparando' ? '#F59E0B' : '#34C759' : '#E5E7EB',\n              color: order.status === status ? '#FFFFFF' : '#666666',\n              borderRadius: 2,\n              textTransform: 'none',\n              minWidth: 90,\n              fontWeight: order.status === status ? '600' : 'normal',\n              fontSize: '0.875rem'\n            },\n            children: status\n          }, status, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              backgroundColor: '#1E3A8A',\n              '&:hover': {\n                backgroundColor: '#153E6F'\n              },\n              borderRadius: 2\n            },\n            onClick: () => handleOpenModal(order),\n            children: \"Ver Detalles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }, this)\n    }, order.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openModal,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 400,\n          bgcolor: 'background.paper',\n          boxShadow: 24,\n          p: 4,\n          borderRadius: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontWeight: \"bold\",\n          mb: 2,\n          children: \"Detalles del Pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), selectedOrder && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Cliente: \", selectedOrder.client]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Tel\\xE9fono: \", selectedOrder.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Productos: \", selectedOrder.items]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Cantidad: \", selectedOrder.cantidad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Total: \", selectedOrder.total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n      color: message.includes('Error') ? 'error' : 'success.main',\n      mt: 2,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(Orders, \"RF0mw8Mo9iPkFhF8guE6HD+Mgeo=\", false, function () {\n  return [useNegocio];\n});\n_c2 = Orders;\nexport default Orders;\nvar _c, _c2;\n$RefreshReg$(_c, \"BotStatusPedido\");\n$RefreshReg$(_c2, \"Orders\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Button","TextField","Box","Modal","Switch","FormControlLabel","SearchIcon","RefreshIcon","AddIcon","axios","useNegocio","jsxDEV","_jsxDEV","Fragment","_Fragment","BotStatusPedido","active","onToggle","control","checked","onChange","color","fileName","_jsxFileName","lineNumber","columnNumber","label","sx","fontWeight","userSelect","_c","Orders","_s","negocioId","orders","setOrders","filter","setFilter","searchTerm","setSearchTerm","messages","setMessages","recibido","preparando","enviado","openModal","setOpenModal","selectedOrder","setSelectedOrder","message","setMessage","get","then","res","pedidos","data","map","pedido","id","time","created_at","Date","toLocaleTimeString","status","estado","charAt","toUpperCase","slice","client","phone","numero_cliente","items","producto","total","cantidad","catch","err","console","error","mensajesGuardados","reduce","acc","msg","tipo","mensaje","prev","handleMessageChange","key","value","saveMessages","post","negocio_id","mensajes","handleOpenModal","order","handleCloseModal","updateStatus","orderId","newStatus","put","toLowerCase","prevOrders","addNewOrder","newOrder","numeroCliente","createdOrder","length","toString","refreshOrders","filteredOrders","includes","maxWidth","mx","children","p","mb","boxShadow","borderRadius","fullWidth","multiline","rows","e","target","variant","backgroundColor","onClick","display","justifyContent","alignItems","placeholder","InputProps","startAdornment","mr","width","f","startIcon","sort","a","b","toMinutes","t","h","m","split","Number","gap","flexWrap","textTransform","minWidth","fontSize","open","onClose","position","top","left","transform","bgcolor","mt","_c2","$RefreshReg$"],"sources":["/Users/francoferrari/Desktop/ITBA/IngeSoft/autowhapp/autowhapp-dashboard/src/components/Orders.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Button, TextField, Box, Modal, Switch, FormControlLabel } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport AddIcon from '@mui/icons-material/Add';\nimport { Order } from '../types';\nimport axios from 'axios';\nimport { useNegocio } from '../NegocioContext';\n\nconst BotStatusPedido: React.FC<{ active: boolean; onToggle: () => void }> = ({ active, onToggle }) => (\n  <FormControlLabel\n    control={<Switch checked={active} onChange={onToggle} color=\"primary\" />}\n    label={active ? \"Módulo Pedido Activado\" : \"Módulo Pedido Desactivado\"}\n    sx={{ fontWeight: 'bold', userSelect: 'none' }}\n  />\n);\n\nconst Orders: React.FC = () => {\n  const { negocioId } = useNegocio(); // Obtener el negocioId del contexto\n\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [filter, setFilter] = useState<'Todos' | 'Recibidos' | 'Enviados'>('Todos');\n  const [searchTerm, setSearchTerm] = useState<string>('');\n\n  const [messages, setMessages] = useState({\n    recibido: 'Tu pedido ha sido recibido, te avisaremos pronto...',\n    preparando: 'Tu pedido está siendo preparado.',\n    enviado: 'Tu pedido está listo y en camino.',\n  });\n\n  const [openModal, setOpenModal] = useState<boolean>(false);\n  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\n  const [message, setMessage] = useState<string>('');\n\n  // Cargar pedidos y mensajes al montar el componente\n  useEffect(() => {\n    if (negocioId !== null) {\n      // Cargar pedidos\n      axios\n        .get(`http://localhost:3000/api/pedidos/${negocioId}`)\n        .then((res) => {\n          const pedidos: Order[] = (res.data as any[]).map((pedido: any) => ({\n            id: pedido.id,\n            time: pedido.created_at || new Date().toLocaleTimeString(), // Usamos la fecha actual si no hay created_at\n            status: pedido.estado.charAt(0).toUpperCase() + pedido.estado.slice(1), // Capitalizamos el estado\n            client: 'Desconocido', // No está en la base de datos\n            phone: pedido.numero_cliente,\n            items: pedido.producto,\n            total: 'N/A', // No está en la base de datos\n            cantidad: pedido.cantidad,\n          }));\n          setOrders(pedidos);\n        })\n        .catch((err) => {\n          console.error('Error al cargar pedidos:', err);\n          setMessage('Error al cargar pedidos');\n        });\n\n      // Cargar mensajes personalizados\n      axios\n        .get(`http://localhost:3000/api/mensajes-pedidos/${negocioId}`)\n        .then((res) => {\n          const mensajesGuardados = (res.data as { tipo: string; mensaje: string }[]).reduce((acc: any, msg: any) => {\n            acc[msg.tipo] = msg.mensaje;\n            return acc;\n          }, {});\n          setMessages((prev) => ({\n            ...prev,\n            ...mensajesGuardados,\n          }));\n        })\n        .catch((err) => {\n          console.error('Error al cargar mensajes de pedidos:', err);\n          setMessage('Error al cargar mensajes de pedidos');\n        });\n    }\n  }, [negocioId]);\n\n  const handleMessageChange = (key: 'recibido' | 'preparando' | 'enviado', value: string) => {\n    setMessages((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const saveMessages = () => {\n    if (negocioId === null) {\n      setMessage('Error: Negocio no identificado');\n      return;\n    }\n\n    axios\n      .post('http://localhost:3000/api/mensajes-pedidos', {\n        negocio_id: negocioId,\n        mensajes: messages,\n      })\n      .then(() => {\n        setMessage('Mensajes guardados con éxito');\n      })\n      .catch((err) => {\n        console.error('Error al guardar mensajes:', err);\n        setMessage('Error al guardar mensajes');\n      });\n  };\n\n  const handleOpenModal = (order: Order) => {\n    setSelectedOrder(order);\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n    setSelectedOrder(null);\n  };\n\n  const updateStatus = (orderId: number, newStatus: 'Recibido' | 'Preparando' | 'Enviado') => {\n    if (negocioId === null) {\n      setMessage('Error: Negocio no identificado');\n      return;\n    }\n\n    // Actualizar el estado del pedido en el backend\n    axios\n      .put(`http://localhost:3000/api/pedido/${orderId}/estado`, {\n        estado: newStatus.toLowerCase(),\n      })\n      .then(() => {\n        // Actualizar el estado localmente\n        setOrders((prevOrders) =>\n          prevOrders.map((order) =>\n            order.id === orderId ? { ...order, status: newStatus } : order\n          )\n        );\n        setMessage(`Estado del pedido ${orderId} actualizado a ${newStatus}`);\n      })\n      .catch((err) => {\n        console.error('Error al actualizar estado del pedido:', err);\n        setMessage('Error al actualizar estado del pedido');\n      });\n  };\n\n  const addNewOrder = () => {\n    if (negocioId === null) {\n      setMessage('Error: Negocio no identificado');\n      return;\n    }\n\n    const newOrder = {\n      negocioId,\n      numeroCliente: '+541123456789', // Simulado\n      producto: 'Producto de prueba',\n      cantidad: 1,\n    };\n\n    axios\n      .post('http://localhost:3000/api/registrar-pedido', newOrder)\n      .then((res) => {\n        const createdOrder: Order = {\n          id: orders.length + 1, // Esto debería venir del backend, pero lo simulamos por ahora\n          time: new Date().toLocaleTimeString(),\n          status: 'Recibido',\n          client: 'Desconocido',\n          phone: newOrder.numeroCliente,\n          items: newOrder.producto,\n          total: 'N/A',\n          cantidad: newOrder.cantidad.toString(),\n        };\n        setOrders([createdOrder, ...orders]);\n        setMessage('Pedido añadido con éxito');\n      })\n      .catch((err) => {\n        console.error('Error al registrar pedido:', err);\n        setMessage('Error al registrar pedido');\n      });\n  };\n\n  const refreshOrders = () => {\n    if (negocioId === null) {\n      setMessage('Error: Negocio no identificado');\n      return;\n    }\n\n    axios\n      .get(`http://localhost:3000/api/pedidos/${negocioId}`)\n      .then((res) => {\n        const pedidos: Order[] = (res.data as any[]).map((pedido: any) => ({\n          id: pedido.id,\n          time: pedido.created_at || new Date().toLocaleTimeString(),\n          status: pedido.estado.charAt(0).toUpperCase() + pedido.estado.slice(1),\n          client: 'Desconocido',\n          phone: pedido.numero_cliente,\n          items: pedido.producto,\n          total: 'N/A',\n          cantidad: pedido.cantidad,\n        }));\n        setOrders(pedidos);\n        setMessage('Pedidos actualizados');\n      })\n      .catch((err) => {\n        console.error('Error al actualizar pedidos:', err);\n        setMessage('Error al actualizar pedidos');\n      });\n  };\n\n  const filteredOrders = orders\n    .filter((order) => {\n      if (filter === 'Todos') return true;\n      if (filter === 'Recibidos') return order.status === 'Recibido';\n      if (filter === 'Enviados') return order.status === 'Enviado';\n      return true;\n    })\n    .filter((order) => (order.phone || '').toLowerCase().includes(searchTerm.toLowerCase())); // Filtramos por número de teléfono\n\n  return (\n    <Box sx={{ maxWidth: 1000, mx: 'auto' }}>\n      {/* Mensajes dentro Card */}\n      <Card sx={{ p: 3, mb: 4, boxShadow: '0 0 7px 7px rgba(0,0,0,0.2)', borderRadius: 2 }}>\n        <TextField\n          label=\"Mensaje Pedido Recibido\"\n          fullWidth\n          multiline\n          rows={2}\n          sx={{ mb: 2 }}\n          value={messages.recibido}\n          onChange={(e) => handleMessageChange('recibido', e.target.value)}\n        />\n        <TextField\n          label=\"Mensaje Pedido Preparando\"\n          fullWidth\n          multiline\n          rows={2}\n          sx={{ mb: 2 }}\n          value={messages.preparando}\n          onChange={(e) => handleMessageChange('preparando', e.target.value)}\n        />\n        <TextField\n          label=\"Mensaje Pedido Enviado\"\n          fullWidth\n          multiline\n          rows={2}\n          sx={{ mb: 3 }}\n          value={messages.enviado}\n          onChange={(e) => handleMessageChange('enviado', e.target.value)}\n        />\n        <Button\n          variant=\"contained\"\n          sx={{ backgroundColor: '#34C759', '&:hover': { backgroundColor: '#2EA44F' }, borderRadius: 2 }}\n          onClick={saveMessages}\n        >\n          Guardar Mensajes\n        </Button>\n      </Card>\n\n      {/* Buscador y filtros en box blanco */}\n      <Box sx={{ mb: 3, p: 2, backgroundColor: 'white', borderRadius: 2, boxShadow: '0 0 7px 7px rgba(0,0,0,0.2)', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <TextField\n          placeholder=\"Buscar pedidos por teléfono...\"\n          variant=\"outlined\"\n          InputProps={{ startAdornment: <SearchIcon sx={{ mr: 1 }} /> }}\n          sx={{ width: 300 }}\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <Box>\n          {['Todos', 'Recibidos', 'Enviados'].map((f) => (\n            <Button\n              key={f}\n              variant={filter === f ? 'contained' : 'outlined'}\n              sx={{\n                mr: 1,\n                backgroundColor: filter === f ? '#1E3A8A' : 'transparent',\n                color: filter === f ? '#FFFFFF' : '#1E3A8A',\n                '&:hover': { backgroundColor: '#153E6F', color: '#FFFFFF' },\n                borderRadius: 2,\n              }}\n              onClick={() => setFilter(f as any)}\n            >\n              {f}\n            </Button>\n          ))}\n          <Button\n            startIcon={<RefreshIcon />}\n            variant=\"contained\"\n            sx={{ mr: 1, backgroundColor: '#1E3A8A', '&:hover': { backgroundColor: '#153E6F' }, borderRadius: 2 }}\n            onClick={refreshOrders}\n          >\n            Actualizar\n          </Button>\n          <Button\n            startIcon={<AddIcon />}\n            variant=\"contained\"\n            sx={{ backgroundColor: '#34C759', '&:hover': { backgroundColor: '#2EA44F' }, borderRadius: 2 }}\n            onClick={addNewOrder}\n          >\n            Nuevo Pedido\n          </Button>\n        </Box>\n      </Box>\n\n      {/* Pedidos ordenados por hora descendente */}\n      {[...filteredOrders]\n        .sort((a, b) => {\n          const toMinutes = (t: string) => {\n            const [h, m] = t.split(':').map(Number);\n            return h * 60 + m;\n          };\n          return toMinutes(b.time || '00:00') - toMinutes(a.time || '00:00');\n        })\n        .map((order) => (\n          <Card key={order.id} sx={{ boxShadow: '0 0 7px 7px rgba(0,0,0,0.2)', borderRadius: 2, mb: 2, p: 2 }}>\n            <CardContent sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <Box>\n                <Typography sx={{ fontWeight: 'bold' }}>Pedido {order.id}</Typography>\n                <Typography color=\"text.secondary\">{order.time}</Typography>\n              </Box>\n              <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n                {['Recibido', 'Preparando', 'Enviado'].map((status) => (\n                  <Button\n                    key={status}\n                    onClick={() => updateStatus(order.id, status as any)}\n                    sx={{\n                      backgroundColor: order.status === status\n                        ? status === 'Recibido'\n                          ? '#9CA3AF'\n                          : status === 'Preparando'\n                          ? '#F59E0B'\n                          : '#34C759'\n                        : '#E5E7EB',\n                      color: order.status === status ? '#FFFFFF' : '#666666',\n                      borderRadius: 2,\n                      textTransform: 'none',\n                      minWidth: 90,\n                      fontWeight: order.status === status ? '600' : 'normal',\n                      fontSize: '0.875rem',\n                    }}\n                  >\n                    {status}\n                  </Button>\n                ))}\n                <Button\n                  variant=\"contained\"\n                  sx={{ backgroundColor: '#1E3A8A', '&:hover': { backgroundColor: '#153E6F' }, borderRadius: 2 }}\n                  onClick={() => handleOpenModal(order)}\n                >\n                  Ver Detalles\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        ))}\n\n      <Modal open={openModal} onClose={handleCloseModal}>\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 400,\n            bgcolor: 'background.paper',\n            boxShadow: 24,\n            p: 4,\n            borderRadius: 2,\n          }}\n        >\n          <Typography variant=\"h6\" fontWeight=\"bold\" mb={2}>\n            Detalles del Pedido\n          </Typography>\n          {selectedOrder && (\n            <>\n              <Typography>Cliente: {selectedOrder.client}</Typography>\n              <Typography>Teléfono: {selectedOrder.phone}</Typography>\n              <Typography>Productos: {selectedOrder.items}</Typography>\n              <Typography>Cantidad: {selectedOrder.cantidad}</Typography>\n              <Typography>Total: {selectedOrder.total}</Typography>\n            </>\n          )}\n        </Box>\n      </Modal>\n\n      {message && (\n        <Typography color={message.includes('Error') ? 'error' : 'success.main'} mt={2}>\n          {message}\n        </Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default Orders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}