{"ast":null,"code":"var _jsxFileName = \"/Users/francoferrari/Desktop/ITBA/IngeSoft/autowhapp/autowhapp-dashboard/src/components/BotStatus.tsx\";\nimport React from 'react';\nimport { Switch, FormControlLabel } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotStatus = ({\n  active,\n  onToggle,\n  negocioId\n}) => {\n  const handleToggle = () => {\n    const newState = !active;\n    axios.post('/api/actualizar-estado-bot', {\n      negocioId,\n      estadoBot: newState\n    }).then(() => {\n      onToggle(newState);\n    }).catch(error => {\n      console.error('Error updating bot status:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(Switch, {\n      checked: active !== null && active !== void 0 ? active : false // Asegurarse de que checked nunca sea undefined\n      ,\n      onChange: handleToggle,\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this),\n    label: active ? \"Bot Activado\" : \"Bot Desactivado\",\n    sx: {\n      fontWeight: 'bold',\n      userSelect: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = BotStatus;\nexport default BotStatus;\nvar _c;\n$RefreshReg$(_c, \"BotStatus\");","map":{"version":3,"names":["React","Switch","FormControlLabel","axios","jsxDEV","_jsxDEV","BotStatus","active","onToggle","negocioId","handleToggle","newState","post","estadoBot","then","catch","error","console","control","checked","onChange","color","fileName","_jsxFileName","lineNumber","columnNumber","label","sx","fontWeight","userSelect","_c","$RefreshReg$"],"sources":["/Users/francoferrari/Desktop/ITBA/IngeSoft/autowhapp/autowhapp-dashboard/src/components/BotStatus.tsx"],"sourcesContent":["import React from 'react';\nimport { Switch, FormControlLabel } from '@mui/material';\nimport axios from 'axios';\n\nconst BotStatus: React.FC<{ active: boolean; onToggle: (newState: boolean) => void; negocioId: number }> = ({ active, onToggle, negocioId }) => {\n  const handleToggle = () => {\n    const newState = !active;\n    axios.post('/api/actualizar-estado-bot', { negocioId, estadoBot: newState })\n      .then(() => {\n        onToggle(newState);\n      })\n      .catch(error => {\n        console.error('Error updating bot status:', error);\n      });\n  };\n\n  return (\n    <FormControlLabel\n      control={\n        <Switch\n          checked={active ?? false} // Asegurarse de que checked nunca sea undefined\n          onChange={handleToggle}\n          color=\"primary\"\n        />\n      }\n      label={active ? \"Bot Activado\" : \"Bot Desactivado\"}\n      sx={{ fontWeight: 'bold', userSelect: 'none' }}\n    />\n  );\n};\n\nexport default BotStatus;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,gBAAgB,QAAQ,eAAe;AACxD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAkG,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAC9I,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,QAAQ,GAAG,CAACJ,MAAM;IACxBJ,KAAK,CAACS,IAAI,CAAC,4BAA4B,EAAE;MAAEH,SAAS;MAAEI,SAAS,EAAEF;IAAS,CAAC,CAAC,CACzEG,IAAI,CAAC,MAAM;MACVN,QAAQ,CAACG,QAAQ,CAAC;IACpB,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;EAED,oBACEX,OAAA,CAACH,gBAAgB;IACfgB,OAAO,eACLb,OAAA,CAACJ,MAAM;MACLkB,OAAO,EAAEZ,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,KAAM,CAAC;MAAA;MAC1Ba,QAAQ,EAAEV,YAAa;MACvBW,KAAK,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CACF;IACDC,KAAK,EAAEnB,MAAM,GAAG,cAAc,GAAG,iBAAkB;IACnDoB,EAAE,EAAE;MAAEC,UAAU,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAO;EAAE;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEN,CAAC;AAACK,EAAA,GAzBIxB,SAAkG;AA2BxG,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}