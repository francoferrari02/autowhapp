{"ast":null,"code":"var _jsxFileName = \"/Users/francoferrari/Desktop/ITBA/IngeSoft/autowhapp/autowhapp-dashboard/src/components/BotStatus.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Switch } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotStatus = ({\n  negocioId\n}) => {\n  _s();\n  const [isActive, setIsActive] = useState(true);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Fetch initial bot status from the backend\n    axios.get(`http://localhost:3000/negocio/${negocioId}`).then(response => {\n      setIsActive(response.data.estado_bot);\n    }).catch(error => {\n      console.error('Error fetching bot status:', error);\n      setMessage('Error al cargar el estado del bot');\n    });\n  }, [negocioId]);\n  const handleToggle = () => {\n    const newStatus = !isActive;\n    setIsActive(newStatus);\n\n    // Update bot status in the backend\n    axios.post('http://localhost:3000/actualizar-estado-bot', {\n      negocioId,\n      estadoBot: newStatus\n    }).then(() => {\n      setMessage('Estado actualizado con éxito');\n    }).catch(error => {\n      console.error('Error updating bot status:', error);\n      setMessage('Error al actualizar el estado');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      boxShadow: '0 0 5px 5px rgba(0,0,0,0.20)',\n      borderRadius: '40px',\n      px: 3,\n      py: 0,\n      minWidth: 400,\n      width: \"100%\",\n      maxWidth: \"480px\",\n      marginTop: \"-10px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 18,\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            fontFamily: 'Poppins',\n            fontWeight: 'bold',\n            minWidth: 130,\n            pr: 3\n          },\n          children: \"Estado del Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: isActive,\n          onChange: handleToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontFamily: 'Poppins',\n            ml: 1\n          },\n          children: isActive ? 'Encendido' : 'Apagado'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontFamily: 'Poppins',\n          mt: 2\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(BotStatus, \"iMxNb1qVDSgKWWlFhiZ6qxnyxt8=\");\n_c = BotStatus;\nexport default BotStatus;\nvar _c;\n$RefreshReg$(_c, \"BotStatus\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Switch","axios","jsxDEV","_jsxDEV","BotStatus","negocioId","_s","isActive","setIsActive","message","setMessage","get","then","response","data","estado_bot","catch","error","console","handleToggle","newStatus","post","estadoBot","sx","boxShadow","borderRadius","px","py","minWidth","width","maxWidth","marginTop","children","p","style","display","alignItems","gap","flexWrap","variant","fontFamily","fontWeight","pr","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","ml","mt","_c","$RefreshReg$"],"sources":["/Users/francoferrari/Desktop/ITBA/IngeSoft/autowhapp/autowhapp-dashboard/src/components/BotStatus.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Switch } from '@mui/material';\nimport axios from 'axios';\n\nconst BotStatus: React.FC<{ negocioId: number }> = ({ negocioId }) => {\n  const [isActive, setIsActive] = useState<boolean>(true);\n  const [message, setMessage] = useState<string>('');\n\n  useEffect(() => {\n    // Fetch initial bot status from the backend\n    axios.get<{ estado_bot: boolean }>(`http://localhost:3000/negocio/${negocioId}`)\n      .then(response => {\n        setIsActive(response.data.estado_bot);\n      })\n      .catch(error => {\n        console.error('Error fetching bot status:', error);\n        setMessage('Error al cargar el estado del bot');\n      });\n  }, [negocioId]);\n\n  const handleToggle = () => {\n    const newStatus = !isActive;\n    setIsActive(newStatus);\n    \n    // Update bot status in the backend\n    axios.post('http://localhost:3000/actualizar-estado-bot', {\n      negocioId,\n      estadoBot: newStatus\n    })\n      .then(() => {\n        setMessage('Estado actualizado con éxito');\n      })\n      .catch(error => {\n        console.error('Error updating bot status:', error);\n        setMessage('Error al actualizar el estado');\n      });\n  };\n\n  return (\n    <Card \n      sx={{ \n        boxShadow: '0 0 5px 5px rgba(0,0,0,0.20)', \n        borderRadius: '40px', \n        px: 3, py: 0,\n        minWidth: 400,\n        width: \"100%\",\n        maxWidth: \"480px\",\n        marginTop: \"-10px\"\n      }}\n    >\n      <CardContent sx={{ p: 3 }}>\n        <div style={{ display: 'flex', alignItems: 'center', gap: 18, flexWrap: 'wrap' }}>\n          <Typography\n            variant=\"h6\"\n            sx={{ fontFamily: 'Poppins', fontWeight: 'bold', minWidth: 130, pr: 3 }}\n          >\n            Estado del Bot\n          </Typography>\n          <Switch checked={isActive} onChange={handleToggle} />\n          <Typography sx={{ fontFamily: 'Poppins', ml: 1 }}>\n            {isActive ? 'Encendido' : 'Apagado'}\n          </Typography>\n        </div>\n        {message && <Typography sx={{ fontFamily: 'Poppins', mt: 2 }}>{message}</Typography>}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default BotStatus;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}