{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasmazzitelli/Documents/Ing. Software/autowhapp/autowhapp-dashboard/src/pages/RemindersPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, TextField, MenuItem, IconButton } from '@mui/material';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport ModuleStatus from '../components/ModuleStatus';\nimport axios from 'axios';\nimport { useNegocio } from '../NegocioContext';\nimport BellIcon from '@mui/icons-material/Notifications';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RemindersPage = () => {\n  _s();\n  const {\n    negocioId\n  } = useNegocio();\n  const [moduloRecordatorios, setModuloRecordatorios] = useState(false);\n  const [message, setMessage] = useState('');\n  const [frequency, setFrequency] = useState('daily');\n  const [reminders, setReminders] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [editMessage, setEditMessage] = useState('');\n  const [editFrequency, setEditFrequency] = useState('daily');\n  const [pageMessage, setPageMessage] = useState('');\n  useEffect(() => {\n    if (negocioId !== null) {\n      axios.get(`http://localhost:3000/api/negocio/${negocioId}`).then(res => {\n        setModuloRecordatorios(!!res.data.modulo_recordatorios);\n        if (res.data.recordatorios) {\n          setReminders(res.data.recordatorios);\n        }\n      }).catch(err => {\n        console.error('Error al cargar estado de recordatorios:', err);\n        setModuloRecordatorios(false);\n      });\n    }\n  }, [negocioId]);\n  const handleToggleRecordatorios = nuevoEstado => {\n    if (negocioId == null) return;\n    axios.post('http://localhost:3000/api/actualizar-modulo-recordatorios', {\n      negocioId,\n      moduloRecordatorios: nuevoEstado\n    }).then(() => {\n      setModuloRecordatorios(nuevoEstado);\n    }).catch(err => {\n      console.error('Error al actualizar estado de recordatorios:', err);\n    });\n  };\n  const handleAddReminder = () => {\n    if (!message.trim()) {\n      setPageMessage('El mensaje no puede estar vacío');\n      return;\n    }\n    const newReminder = {\n      id: Date.now(),\n      message,\n      frequency\n    };\n    setReminders([...reminders, newReminder]);\n    setMessage('');\n    setFrequency('daily');\n    setPageMessage('Recordatorio añadido con éxito');\n  };\n  const handleEditReminder = id => {\n    const reminder = reminders.find(r => r.id === id);\n    if (reminder) {\n      setEditingId(id);\n      setEditMessage(reminder.message);\n      setEditFrequency(reminder.frequency);\n    }\n  };\n  const handleSaveEdit = () => {\n    if (!editMessage.trim()) {\n      setPageMessage('El mensaje no puede estar vacío');\n      return;\n    }\n    setReminders(reminders.map(r => r.id === editingId ? {\n      ...r,\n      message: editMessage,\n      frequency: editFrequency\n    } : r));\n    setEditingId(null);\n    setEditMessage('');\n    setEditFrequency('daily');\n    setPageMessage('Recordatorio actualizado con éxito');\n  };\n  const handleDeleteReminder = id => {\n    setReminders(reminders.filter(r => r.id !== id));\n    setPageMessage('Recordatorio eliminado con éxito');\n  };\n  const saveSettings = async () => {\n    if (negocioId == null) return;\n    try {\n      await axios.put(`http://localhost:3000/api/recordatorios/${negocioId}`, {\n        recordatorios: reminders\n      });\n      setPageMessage('Configuración de recordatorios guardada con éxito');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error al guardar configuración de recordatorios:', error);\n      setPageMessage(`Error al guardar: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#2563EB',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        selected: \"reminders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flexGrow: 1,\n        sx: {\n          padding: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"start\",\n          mb: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-poppins font-bold text-white\",\n            style: {\n              marginTop: '0.5rem'\n            },\n            children: \"Configuraci\\xF3n de Recordatorios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              maxWidth: '480px'\n            },\n            children: /*#__PURE__*/_jsxDEV(ModuleStatus, {\n              moduleName: \"Recordatorios\",\n              active: moduloRecordatorios,\n              onToggle: handleToggleRecordatorios\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            backgroundColor: 'white',\n            padding: 6,\n            borderRadius: 8,\n            boxShadow: '0 0 7px 7px rgba(0,0,0,0.2)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              fontFamily: 'Poppins',\n              fontWeight: 'bold',\n              mb: 4\n            },\n            children: \"Configurar Recordatorio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              border: '1px solid #e0e0e0',\n              borderRadius: 4,\n              p: 3,\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2,\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(BellIcon, {\n                sx: {\n                  color: '#2563EB'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontFamily: 'Poppins',\n                  fontWeight: 'bold'\n                },\n                children: \"Nuevo Recordatorio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Mensaje\",\n              value: message,\n              onChange: e => setMessage(e.target.value),\n              fullWidth: true,\n              variant: \"outlined\",\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              label: \"Frecuencia\",\n              value: frequency,\n              onChange: e => setFrequency(e.target.value),\n              fullWidth: true,\n              variant: \"outlined\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"daily\",\n                children: \"Diario\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"weekly\",\n                children: \"Semanal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"monthly\",\n                children: \"Mensual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleAddReminder,\n              sx: {\n                backgroundColor: '#34C759',\n                color: 'white',\n                '&:hover': {\n                  backgroundColor: '#2EA44F'\n                }\n              },\n              children: \"A\\xF1adir Recordatorio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              fontFamily: 'Poppins',\n              fontWeight: 'bold',\n              mt: 4,\n              mb: 2\n            },\n            children: \"Lista de Recordatorios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              border: '1px solid #e0e0e0',\n              borderRadius: 4,\n              p: 3\n            },\n            children: reminders.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontFamily: 'Poppins'\n              },\n              children: \"No hay recordatorios configurados\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this) : reminders.map(reminder => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                mb: 2,\n                p: 2,\n                border: '1px solid #e0e0e0',\n                borderRadius: 4\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    fontFamily: 'Poppins'\n                  },\n                  children: [reminder.message, \" (Frecuencia: \", reminder.frequency, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: editingId === reminder.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    value: editMessage,\n                    onChange: e => setEditMessage(e.target.value),\n                    size: \"small\",\n                    sx: {\n                      mr: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    select: true,\n                    value: editFrequency,\n                    onChange: e => setEditFrequency(e.target.value),\n                    size: \"small\",\n                    sx: {\n                      mr: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"daily\",\n                      children: \"Diario\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"weekly\",\n                      children: \"Semanal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"monthly\",\n                      children: \"Mensual\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: handleSaveEdit,\n                    sx: {\n                      backgroundColor: '#34C759',\n                      color: 'white',\n                      '&:hover': {\n                        backgroundColor: '#2EA44F'\n                      },\n                      mr: 1\n                    },\n                    children: \"Guardar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => setEditingId(null),\n                    sx: {\n                      color: '#EF4444',\n                      '&:hover': {\n                        color: '#DC2626'\n                      }\n                    },\n                    children: \"Cancelar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleEditReminder(reminder.id),\n                    color: \"primary\",\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleDeleteReminder(reminder.id),\n                    color: \"error\",\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)]\n            }, reminder.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4,\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: saveSettings,\n              sx: {\n                backgroundColor: '#34C759',\n                color: 'white',\n                '&:hover': {\n                  backgroundColor: '#2EA44F'\n                }\n              },\n              children: \"Guardar Cambios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), pageMessage && /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 2,\n              color: pageMessage.includes('Error') ? 'red' : 'green'\n            },\n            children: pageMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(RemindersPage, \"0VCbccDmboCimW7zfpq+Nv3mKSk=\", false, function () {\n  return [useNegocio];\n});\n_c = RemindersPage;\nexport default RemindersPage;\nvar _c;\n$RefreshReg$(_c, \"RemindersPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","TextField","MenuItem","IconButton","Header","Sidebar","ModuleStatus","axios","useNegocio","BellIcon","DeleteIcon","EditIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","RemindersPage","_s","negocioId","moduloRecordatorios","setModuloRecordatorios","message","setMessage","frequency","setFrequency","reminders","setReminders","editingId","setEditingId","editMessage","setEditMessage","editFrequency","setEditFrequency","pageMessage","setPageMessage","get","then","res","data","modulo_recordatorios","recordatorios","catch","err","console","error","handleToggleRecordatorios","nuevoEstado","post","handleAddReminder","trim","newReminder","id","Date","now","handleEditReminder","reminder","find","r","handleSaveEdit","map","handleDeleteReminder","filter","saveSettings","put","_error$response","_error$response$data","response","sx","backgroundColor","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","display","selected","flexGrow","padding","justifyContent","alignItems","mb","className","style","marginTop","maxWidth","moduleName","active","onToggle","borderRadius","boxShadow","variant","fontFamily","fontWeight","border","p","gap","color","label","value","onChange","e","target","fullWidth","select","onClick","mt","length","size","mr","includes","_c","$RefreshReg$"],"sources":["/Users/nicolasmazzitelli/Documents/Ing. Software/autowhapp/autowhapp-dashboard/src/pages/RemindersPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, TextField, MenuItem, IconButton } from '@mui/material';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport ModuleStatus from '../components/ModuleStatus';\nimport axios from 'axios';\nimport { useNegocio } from '../NegocioContext';\nimport BellIcon from '@mui/icons-material/Notifications';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n\nconst RemindersPage: React.FC = () => {\n  const { negocioId } = useNegocio();\n  const [moduloRecordatorios, setModuloRecordatorios] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>('');\n  const [frequency, setFrequency] = useState<string>('daily');\n  const [reminders, setReminders] = useState<{ id: number; message: string; frequency: string }[]>([]);\n  const [editingId, setEditingId] = useState<number | null>(null);\n  const [editMessage, setEditMessage] = useState<string>('');\n  const [editFrequency, setEditFrequency] = useState<string>('daily');\n  const [pageMessage, setPageMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (negocioId !== null) {\n      axios\n        .get<{ modulo_recordatorios: boolean; recordatorios?: { id: number; message: string; frequency: string }[] }>(`http://localhost:3000/api/negocio/${negocioId}`)\n        .then((res) => {\n          setModuloRecordatorios(!!res.data.modulo_recordatorios);\n          if (res.data.recordatorios) {\n            setReminders(res.data.recordatorios);\n          }\n        })\n        .catch((err) => {\n          console.error('Error al cargar estado de recordatorios:', err);\n          setModuloRecordatorios(false);\n        });\n    }\n  }, [negocioId]);\n\n  const handleToggleRecordatorios = (nuevoEstado: boolean) => {\n    if (negocioId == null) return;\n    axios\n      .post('http://localhost:3000/api/actualizar-modulo-recordatorios', { negocioId, moduloRecordatorios: nuevoEstado })\n      .then(() => {\n        setModuloRecordatorios(nuevoEstado);\n      })\n      .catch(err => {\n        console.error('Error al actualizar estado de recordatorios:', err);\n      });\n  };\n\n  const handleAddReminder = () => {\n    if (!message.trim()) {\n      setPageMessage('El mensaje no puede estar vacío');\n      return;\n    }\n    const newReminder = { id: Date.now(), message, frequency };\n    setReminders([...reminders, newReminder]);\n    setMessage('');\n    setFrequency('daily');\n    setPageMessage('Recordatorio añadido con éxito');\n  };\n\n  const handleEditReminder = (id: number) => {\n    const reminder = reminders.find(r => r.id === id);\n    if (reminder) {\n      setEditingId(id);\n      setEditMessage(reminder.message);\n      setEditFrequency(reminder.frequency);\n    }\n  };\n\n  const handleSaveEdit = () => {\n    if (!editMessage.trim()) {\n      setPageMessage('El mensaje no puede estar vacío');\n      return;\n    }\n    setReminders(reminders.map(r => r.id === editingId ? { ...r, message: editMessage, frequency: editFrequency } : r));\n    setEditingId(null);\n    setEditMessage('');\n    setEditFrequency('daily');\n    setPageMessage('Recordatorio actualizado con éxito');\n  };\n\n  const handleDeleteReminder = (id: number) => {\n    setReminders(reminders.filter(r => r.id !== id));\n    setPageMessage('Recordatorio eliminado con éxito');\n  };\n\n  const saveSettings = async () => {\n    if (negocioId == null) return;\n    try {\n      await axios.put(`http://localhost:3000/api/recordatorios/${negocioId}`, {\n        recordatorios: reminders,\n      });\n      setPageMessage('Configuración de recordatorios guardada con éxito');\n    } catch (error: any) {\n      console.error('Error al guardar configuración de recordatorios:', error);\n      setPageMessage(`Error al guardar: ${error.response?.data?.error || error.message}`);\n    }\n  };\n\n  return (\n    <Box sx={{ backgroundColor: '#2563EB', minHeight: '100vh' }}>\n      <Header />\n      <Box display=\"flex\">\n        <Sidebar selected=\"reminders\" />\n        <Box flexGrow={1} sx={{ padding: 3 }}>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"start\" mb={4}>\n            <h2 className=\"text-2xl font-poppins font-bold text-white\" style={{ marginTop: '0.5rem' }}>\n              Configuración de Recordatorios\n            </h2>\n            <div style={{ display: 'flex', alignItems: 'center', maxWidth: '480px' }}>\n              <ModuleStatus\n                moduleName=\"Recordatorios\"\n                active={moduloRecordatorios}\n                onToggle={handleToggleRecordatorios}\n              />\n            </div>\n          </Box>\n          <Box sx={{ backgroundColor: 'white', padding: 6, borderRadius: 8, boxShadow: '0 0 7px 7px rgba(0,0,0,0.2)' }}>\n            <Typography variant=\"h6\" sx={{ fontFamily: 'Poppins', fontWeight: 'bold', mb: 4 }}>\n              Configurar Recordatorio\n            </Typography>\n            <Box sx={{ border: '1px solid #e0e0e0', borderRadius: 4, p: 3, mb: 4 }}>\n              <Box sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 2 }}>\n                <BellIcon sx={{ color: '#2563EB' }} />\n                <Typography sx={{ fontFamily: 'Poppins', fontWeight: 'bold' }}>\n                  Nuevo Recordatorio\n                </Typography>\n              </Box>\n              <TextField\n                label=\"Mensaje\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                fullWidth\n                variant=\"outlined\"\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                select\n                label=\"Frecuencia\"\n                value={frequency}\n                onChange={(e) => setFrequency(e.target.value)}\n                fullWidth\n                variant=\"outlined\"\n                sx={{ mb: 2 }}\n              >\n                <MenuItem value=\"daily\">Diario</MenuItem>\n                <MenuItem value=\"weekly\">Semanal</MenuItem>\n                <MenuItem value=\"monthly\">Mensual</MenuItem>\n              </TextField>\n              <Button\n                onClick={handleAddReminder}\n                sx={{ backgroundColor: '#34C759', color: 'white', '&:hover': { backgroundColor: '#2EA44F' } }}\n              >\n                Añadir Recordatorio\n              </Button>\n            </Box>\n\n            <Typography variant=\"h6\" sx={{ fontFamily: 'Poppins', fontWeight: 'bold', mt: 4, mb: 2 }}>\n              Lista de Recordatorios\n            </Typography>\n            <Box sx={{ border: '1px solid #e0e0e0', borderRadius: 4, p: 3 }}>\n              {reminders.length === 0 ? (\n                <Typography sx={{ fontFamily: 'Poppins' }}>No hay recordatorios configurados</Typography>\n              ) : (\n                reminders.map((reminder) => (\n                  <Box\n                    key={reminder.id}\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between',\n                      mb: 2,\n                      p: 2,\n                      border: '1px solid #e0e0e0',\n                      borderRadius: 4,\n                    }}\n                  >\n                    <Box>\n                      <Typography sx={{ fontFamily: 'Poppins' }}>\n                        {reminder.message} (Frecuencia: {reminder.frequency})\n                      </Typography>\n                    </Box>\n                    <Box>\n                      {editingId === reminder.id ? (\n                        <>\n                          <TextField\n                            value={editMessage}\n                            onChange={(e) => setEditMessage(e.target.value)}\n                            size=\"small\"\n                            sx={{ mr: 1 }}\n                          />\n                          <TextField\n                            select\n                            value={editFrequency}\n                            onChange={(e) => setEditFrequency(e.target.value)}\n                            size=\"small\"\n                            sx={{ mr: 1 }}\n                          >\n                            <MenuItem value=\"daily\">Diario</MenuItem>\n                            <MenuItem value=\"weekly\">Semanal</MenuItem>\n                            <MenuItem value=\"monthly\">Mensual</MenuItem>\n                          </TextField>\n                          <Button\n                            onClick={handleSaveEdit}\n                            sx={{ backgroundColor: '#34C759', color: 'white', '&:hover': { backgroundColor: '#2EA44F' }, mr: 1 }}\n                          >\n                            Guardar\n                          </Button>\n                          <Button\n                            onClick={() => setEditingId(null)}\n                            sx={{ color: '#EF4444', '&:hover': { color: '#DC2626' } }}\n                          >\n                            Cancelar\n                          </Button>\n                        </>\n                      ) : (\n                        <>\n                          <IconButton onClick={() => handleEditReminder(reminder.id)} color=\"primary\">\n                            <EditIcon />\n                          </IconButton>\n                          <IconButton onClick={() => handleDeleteReminder(reminder.id)} color=\"error\">\n                            <DeleteIcon />\n                          </IconButton>\n                        </>\n                      )}\n                    </Box>\n                  </Box>\n                ))\n              )}\n            </Box>\n\n            <Box sx={{ mt: 4, display: 'flex', justifyContent: 'flex-end' }}>\n              <Button\n                onClick={saveSettings}\n                sx={{ backgroundColor: '#34C759', color: 'white', '&:hover': { backgroundColor: '#2EA44F' } }}\n              >\n                Guardar Cambios\n              </Button>\n            </Box>\n            {pageMessage && (\n              <Typography sx={{ mt: 2, color: pageMessage.includes('Error') ? 'red' : 'green' }}>\n                {pageMessage}\n              </Typography>\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default RemindersPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}