{"ast":null,"code":"var _jsxFileName = \"/Users/francoferrari/Desktop/ITBA/IngeSoft/autowhapp/autowhapp-dashboard/src/components/BotStatus.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, Switch } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotStatus = () => {\n  _s();\n  const [isActive, setIsActive] = useState(true);\n  const [message, setMessage] = useState('');\n  const handleToggle = () => {\n    const newStatus = !isActive;\n    setIsActive(newStatus);\n    // Simular el guardado y la notificación a n8n\n    setMessage(`Bot ${newStatus ? 'encendido' : 'apagado'} con éxito (simulado)`);\n    console.log('Simulando envío a n8n:', {\n      isActive: newStatus\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      boxShadow: '0 4px 12px rgba(0,0,0,0.10)',\n      borderRadius: '16px',\n      px: 3,\n      py: 0,\n      minWidth: 340,\n      width: \"100%\",\n      maxWidth: \"480px\",\n      marginTop: \"89px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 18,\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            fontFamily: 'Poppins',\n            fontWeight: 'bold',\n            minWidth: 130,\n            pr: 3\n          },\n          children: \"Estado del Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          checked: isActive,\n          onChange: handleToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontFamily: 'Poppins',\n            ml: 1\n          },\n          children: isActive ? 'Encendido' : 'Apagado'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: message.includes('Error') ? 'red' : 'green',\n          mt: 1,\n          ml: 0.5,\n          fontSize: 15\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(BotStatus, \"3kHAC38kbi1AW4u98wwR0wYYjrc=\");\n_c = BotStatus;\nexport default BotStatus;\nvar _c;\n$RefreshReg$(_c, \"BotStatus\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","Switch","jsxDEV","_jsxDEV","BotStatus","_s","isActive","setIsActive","message","setMessage","handleToggle","newStatus","console","log","sx","boxShadow","borderRadius","px","py","minWidth","width","maxWidth","marginTop","children","p","style","display","alignItems","gap","flexWrap","variant","fontFamily","fontWeight","pr","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","ml","color","includes","mt","fontSize","_c","$RefreshReg$"],"sources":["/Users/francoferrari/Desktop/ITBA/IngeSoft/autowhapp/autowhapp-dashboard/src/components/BotStatus.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, Typography, Switch } from '@mui/material';\n\nconst BotStatus: React.FC = () => {\n  const [isActive, setIsActive] = useState<boolean>(true);\n  const [message, setMessage] = useState<string>('');\n\n  const handleToggle = () => {\n    const newStatus = !isActive;\n    setIsActive(newStatus);\n    // Simular el guardado y la notificación a n8n\n    setMessage(`Bot ${newStatus ? 'encendido' : 'apagado'} con éxito (simulado)`);\n    console.log('Simulando envío a n8n:', { isActive: newStatus });\n  };\n\n  return (\n    <Card \n    sx={{ \n      boxShadow: '0 4px 12px rgba(0,0,0,0.10)', \n      borderRadius: '16px', \n      px: 3, py: 0,\n      minWidth: 340,\n      width: \"100%\",\n      maxWidth: \"480px\",\n      marginTop: \"89px\"\n      \n    }}\n  >\n    <CardContent sx={{ \n      p: 3, \n    }}>\n      <div style={{ display: 'flex', alignItems: 'center', gap: 18, flexWrap: 'wrap' }}>\n        <Typography\n          variant=\"h6\"\n          sx={{ fontFamily: 'Poppins', fontWeight: 'bold', minWidth: 130, pr: 3 }}\n        >\n          Estado del Bot\n        </Typography>\n        <Switch checked={isActive} onChange={handleToggle} />\n        <Typography sx={{ fontFamily: 'Poppins', ml: 1 }}>\n          {isActive ? 'Encendido' : 'Apagado'}\n        </Typography>\n      </div>\n      {message && (\n        <Typography\n          sx={{\n            color: message.includes('Error') ? 'red' : 'green',\n            mt: 1, ml: 0.5, fontSize: 15,\n          }}\n        >\n          {message}\n        </Typography>\n      )}\n    </CardContent>\n  </Card>\n  );\n};\n\nexport default BotStatus;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}