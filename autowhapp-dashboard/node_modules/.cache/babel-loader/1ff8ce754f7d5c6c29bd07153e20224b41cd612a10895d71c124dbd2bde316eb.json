{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasmazzitelli/Documents/Ing. Software/autowhapp/autowhapp-dashboard/src/pages/ReservationsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button } from '@mui/material';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport ModuleStatus from '../components/ModuleStatus';\nimport axios from 'axios';\nimport { useNegocio } from '../NegocioContext';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\n\n// Tipado para la respuesta del API\n\n// Tipado para los eventos del calendario\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservationsPage = () => {\n  _s();\n  const {\n    negocioId\n  } = useNegocio();\n  const [moduloReservas, setModuloReservas] = useState(false);\n  const [appointmentHours, setAppointmentHours] = useState({\n    Lunes: {\n      open: '09:00',\n      close: '18:00'\n    },\n    Martes: {\n      open: '09:00',\n      close: '18:00'\n    },\n    Miércoles: {\n      open: '09:00',\n      close: '18:00'\n    },\n    Jueves: {\n      open: '09:00',\n      close: '18:00'\n    },\n    Viernes: {\n      open: '09:00',\n      close: '18:00'\n    },\n    Sábado: {\n      open: '09:00',\n      close: '18:00'\n    },\n    Domingo: {\n      open: '09:00',\n      close: '18:00'\n    }\n  });\n  const [reservations, setReservations] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    if (negocioId !== null) {\n      axios.get(`http://localhost:3000/api/negocio/${negocioId}`).then(res => {\n        setModuloReservas(!!res.data.modulo_reservas);\n        if (res.data.horarios_citas) {\n          try {\n            const parsedHours = JSON.parse(res.data.horarios_citas);\n            const days = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\n            const isValidHours = days.every(day => parsedHours[day] && typeof parsedHours[day] === 'object' && 'open' in parsedHours[day] && 'close' in parsedHours[day]);\n            if (isValidHours) setAppointmentHours(parsedHours);\n          } catch (e) {\n            console.error('Error al parsear horarios de citas:', e);\n          }\n        }\n        if (res.data.reservas) {\n          setReservations(res.data.reservas.map(reserva => ({\n            id: reserva.id.toString(),\n            title: 'Reserva',\n            start: new Date(reserva.fecha_inicio),\n            end: new Date(reserva.fecha_fin)\n          })));\n        }\n      }).catch(err => {\n        console.error('Error al cargar estado de reservas:', err);\n        setModuloReservas(false);\n      });\n    }\n  }, [negocioId]);\n  const handleToggleReservas = nuevoEstado => {\n    if (negocioId == null) return;\n    axios.post('http://localhost:3000/api/actualizar-modulo-reservas', {\n      negocioId,\n      moduloReservas: nuevoEstado\n    }).then(() => {\n      setModuloReservas(nuevoEstado);\n    }).catch(err => {\n      console.error('Error al actualizar estado de reservas:', err);\n    });\n  };\n  const handleHoursChange = (day, field, value) => {\n    setAppointmentHours(prev => ({\n      ...prev,\n      [day]: {\n        ...prev[day],\n        [field]: value\n      }\n    }));\n  };\n  const handleDateClick = info => {\n    const dateStr = info.dateStr;\n    const dayOfWeek = new Date(dateStr).toLocaleString('es-ES', {\n      weekday: 'long'\n    }).replace(/^\\w/, c => c.toUpperCase());\n    const hoursForDay = appointmentHours[dayOfWeek];\n    if (!hoursForDay) return;\n    const [startHour, startMinute] = hoursForDay.open.split(':').map(Number);\n    const [endHour, endMinute] = hoursForDay.close.split(':').map(Number);\n    const clickedHour = info.date.getHours();\n    const clickedMinute = info.date.getMinutes();\n    const clickedTimeInMinutes = clickedHour * 60 + clickedMinute;\n    const startTimeInMinutes = startHour * 60 + startMinute;\n    const endTimeInMinutes = endHour * 60 + endMinute;\n    if (clickedTimeInMinutes < startTimeInMinutes || clickedTimeInMinutes > endTimeInMinutes) {\n      setMessage(`No se puede reservar fuera del horario: ${hoursForDay.open} - ${hoursForDay.close}`);\n      return;\n    }\n    const newReservation = {\n      title: 'Reserva',\n      start: info.date,\n      end: new Date(info.date.getTime() + 60 * 60 * 1000) // 1 hora por defecto\n    };\n    if (negocioId == null) return;\n    axios.post(`http://localhost:3000/api/reservas/${negocioId}`, {\n      fecha_inicio: newReservation.start.toISOString(),\n      fecha_fin: newReservation.end.toISOString()\n    }).then(res => {\n      setReservations([...reservations, {\n        ...newReservation,\n        id: res.data.id.toString()\n      }]);\n      setMessage('Reserva añadida con éxito');\n    }).catch(err => {\n      console.error('Error al añadir reserva:', err);\n      setMessage('Error al añadir reserva');\n    });\n  };\n  const saveSettings = async () => {\n    if (negocioId == null) return;\n    try {\n      await axios.put(`http://localhost:3000/api/reservas/${negocioId}`, {\n        horarios_citas: JSON.stringify(appointmentHours)\n      });\n      setMessage('Configuración de reservas guardada con éxito');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error al guardar configuración de reservas:', error);\n      setMessage(`Error al guardar: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message}`);\n    }\n  };\n  const days = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#2563EB',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        selected: \"reservations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flexGrow: 1,\n        sx: {\n          padding: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"start\",\n          mb: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-poppins font-bold text-white\",\n            style: {\n              marginTop: '0.5rem'\n            },\n            children: \"Configuraci\\xF3n de Reservas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              maxWidth: '480px'\n            },\n            children: /*#__PURE__*/_jsxDEV(ModuleStatus, {\n              moduleName: \"Reservas\",\n              active: moduloReservas,\n              onToggle: handleToggleReservas\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            backgroundColor: 'white',\n            padding: 6,\n            borderRadius: 8,\n            boxShadow: '0 0 7px 7px rgba(0,0,0,0.2)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              fontFamily: 'Poppins',\n              fontWeight: 'bold',\n              mb: 4\n            },\n            children: \"Horarios de las Citas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              border: '1px solid #e0e0e0',\n              borderRadius: 4,\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2,\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(AccessTimeIcon, {\n                sx: {\n                  color: '#2563EB'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  fontFamily: 'Poppins',\n                  fontWeight: 'bold'\n                },\n                children: \"Horarios de Atenci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'grid',\n                gridTemplateColumns: {\n                  xs: '1fr',\n                  md: '1fr 1fr'\n                },\n                gap: 2\n              },\n              children: days.map(day => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    width: 100,\n                    fontFamily: 'Poppins'\n                  },\n                  children: day\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  value: appointmentHours[day].open,\n                  onChange: e => handleHoursChange(day, 'open', e.target.value),\n                  className: \"p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-blue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  value: appointmentHours[day].close,\n                  onChange: e => handleHoursChange(day, 'close', e.target.value),\n                  className: \"p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-blue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this)]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              fontFamily: 'Poppins',\n              fontWeight: 'bold',\n              mt: 4,\n              mb: 2\n            },\n            children: \"Reservas Programadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              border: '1px solid #e0e0e0',\n              borderRadius: 4,\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n              plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n              initialView: \"timeGridWeek\",\n              events: reservations,\n              dateClick: handleDateClick,\n              slotMinTime: \"08:00:00\",\n              slotMaxTime: \"20:00:00\",\n              headerToolbar: {\n                left: 'prev,next today',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n              },\n              height: \"auto\",\n              locale: \"es\",\n              eventColor: \"#34C759\",\n              eventTextColor: \"white\",\n              allDaySlot: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4,\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: saveSettings,\n              sx: {\n                backgroundColor: '#34C759',\n                color: 'white',\n                '&:hover': {\n                  backgroundColor: '#2EA44F'\n                }\n              },\n              children: \"Guardar Cambios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 2,\n              color: message.includes('Error') ? 'red' : 'green'\n            },\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservationsPage, \"vulAILurIkcMUvpHf4S6ThyK8Vo=\", false, function () {\n  return [useNegocio];\n});\n_c = ReservationsPage;\nexport default ReservationsPage;\nvar _c;\n$RefreshReg$(_c, \"ReservationsPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Header","Sidebar","ModuleStatus","axios","useNegocio","AccessTimeIcon","jsxDEV","_jsxDEV","ReservationsPage","_s","negocioId","moduloReservas","setModuloReservas","appointmentHours","setAppointmentHours","Lunes","open","close","Martes","Miércoles","Jueves","Viernes","Sábado","Domingo","reservations","setReservations","message","setMessage","get","then","res","data","modulo_reservas","horarios_citas","parsedHours","JSON","parse","days","isValidHours","every","day","e","console","error","reservas","map","reserva","id","toString","title","start","Date","fecha_inicio","end","fecha_fin","catch","err","handleToggleReservas","nuevoEstado","post","handleHoursChange","field","value","prev","handleDateClick","info","dateStr","dayOfWeek","toLocaleString","weekday","replace","c","toUpperCase","hoursForDay","startHour","startMinute","split","Number","endHour","endMinute","clickedHour","date","getHours","clickedMinute","getMinutes","clickedTimeInMinutes","startTimeInMinutes","endTimeInMinutes","newReservation","getTime","toISOString","saveSettings","put","stringify","_error$response","_error$response$data","response","sx","backgroundColor","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","display","selected","flexGrow","padding","justifyContent","alignItems","mb","className","style","marginTop","maxWidth","moduleName","active","onToggle","borderRadius","boxShadow","variant","fontFamily","fontWeight","border","p","gap","color","gridTemplateColumns","xs","md","width","type","onChange","target","mt","plugins","initialView","events","dateClick","slotMinTime","slotMaxTime","headerToolbar","left","center","right","height","locale","eventColor","eventTextColor","allDaySlot","onClick","includes","_c","$RefreshReg$"],"sources":["/Users/nicolasmazzitelli/Documents/Ing. Software/autowhapp/autowhapp-dashboard/src/pages/ReservationsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button } from '@mui/material';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport ModuleStatus from '../components/ModuleStatus';\nimport axios from 'axios';\nimport { useNegocio } from '../NegocioContext';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\n\n// Tipado para la respuesta del API\ninterface NegocioResponse {\n  modulo_reservas: boolean;\n  horarios_citas?: string;\n  reservas?: { id: number; fecha_inicio: string; fecha_fin: string }[];\n}\n\n// Tipado para los eventos del calendario\ninterface CalendarEvent {\n  id: string;\n  title: string;\n  start: Date;\n  end: Date;\n}\n\nconst ReservationsPage: React.FC = () => {\n  const { negocioId } = useNegocio();\n  const [moduloReservas, setModuloReservas] = useState<boolean>(false);\n  const [appointmentHours, setAppointmentHours] = useState<Record<string, { open: string; close: string }>>({\n    Lunes: { open: '09:00', close: '18:00' },\n    Martes: { open: '09:00', close: '18:00' },\n    Miércoles: { open: '09:00', close: '18:00' },\n    Jueves: { open: '09:00', close: '18:00' },\n    Viernes: { open: '09:00', close: '18:00' },\n    Sábado: { open: '09:00', close: '18:00' },\n    Domingo: { open: '09:00', close: '18:00' },\n  });\n  const [reservations, setReservations] = useState<CalendarEvent[]>([]);\n  const [message, setMessage] = useState<string>('');\n\n  useEffect(() => {\n    if (negocioId !== null) {\n      axios\n        .get<NegocioResponse>(`http://localhost:3000/api/negocio/${negocioId}`)\n        .then((res) => {\n          setModuloReservas(!!res.data.modulo_reservas);\n          if (res.data.horarios_citas) {\n            try {\n              const parsedHours = JSON.parse(res.data.horarios_citas);\n              const days = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\n              const isValidHours = days.every(day => \n                parsedHours[day] && typeof parsedHours[day] === 'object' && 'open' in parsedHours[day] && 'close' in parsedHours[day]\n              );\n              if (isValidHours) setAppointmentHours(parsedHours);\n            } catch (e) {\n              console.error('Error al parsear horarios de citas:', e);\n            }\n          }\n          if (res.data.reservas) {\n            setReservations(res.data.reservas.map((reserva) => ({\n              id: reserva.id.toString(),\n              title: 'Reserva',\n              start: new Date(reserva.fecha_inicio),\n              end: new Date(reserva.fecha_fin),\n            })));\n          }\n        })\n        .catch((err) => {\n          console.error('Error al cargar estado de reservas:', err);\n          setModuloReservas(false);\n        });\n    }\n  }, [negocioId]);\n\n  const handleToggleReservas = (nuevoEstado: boolean) => {\n    if (negocioId == null) return;\n    axios\n      .post('http://localhost:3000/api/actualizar-modulo-reservas', { negocioId, moduloReservas: nuevoEstado })\n      .then(() => {\n        setModuloReservas(nuevoEstado);\n      })\n      .catch(err => {\n        console.error('Error al actualizar estado de reservas:', err);\n      });\n  };\n\n  const handleHoursChange = (day: string, field: 'open' | 'close', value: string) => {\n    setAppointmentHours(prev => ({\n      ...prev,\n      [day]: { ...prev[day], [field]: value },\n    }));\n  };\n\n  const handleDateClick = (info: { dateStr: string; date: Date }) => {\n    const dateStr = info.dateStr;\n    const dayOfWeek = new Date(dateStr).toLocaleString('es-ES', { weekday: 'long' }).replace(/^\\w/, c => c.toUpperCase());\n    const hoursForDay = appointmentHours[dayOfWeek];\n    if (!hoursForDay) return;\n\n    const [startHour, startMinute] = hoursForDay.open.split(':').map(Number);\n    const [endHour, endMinute] = hoursForDay.close.split(':').map(Number);\n    const clickedHour = info.date.getHours();\n    const clickedMinute = info.date.getMinutes();\n\n    const clickedTimeInMinutes = clickedHour * 60 + clickedMinute;\n    const startTimeInMinutes = startHour * 60 + startMinute;\n    const endTimeInMinutes = endHour * 60 + endMinute;\n\n    if (clickedTimeInMinutes < startTimeInMinutes || clickedTimeInMinutes > endTimeInMinutes) {\n      setMessage(`No se puede reservar fuera del horario: ${hoursForDay.open} - ${hoursForDay.close}`);\n      return;\n    }\n\n    const newReservation = {\n      title: 'Reserva',\n      start: info.date,\n      end: new Date(info.date.getTime() + 60 * 60 * 1000), // 1 hora por defecto\n    };\n\n    if (negocioId == null) return;\n    axios\n      .post<{ id: number }>(`http://localhost:3000/api/reservas/${negocioId}`, {\n        fecha_inicio: newReservation.start.toISOString(),\n        fecha_fin: newReservation.end.toISOString(),\n      })\n      .then((res) => {\n        setReservations([...reservations, { ...newReservation, id: res.data.id.toString() }]);\n        setMessage('Reserva añadida con éxito');\n      })\n      .catch((err) => {\n        console.error('Error al añadir reserva:', err);\n        setMessage('Error al añadir reserva');\n      });\n  };\n\n  const saveSettings = async () => {\n    if (negocioId == null) return;\n    try {\n      await axios.put(`http://localhost:3000/api/reservas/${negocioId}`, {\n        horarios_citas: JSON.stringify(appointmentHours),\n      });\n      setMessage('Configuración de reservas guardada con éxito');\n    } catch (error: any) {\n      console.error('Error al guardar configuración de reservas:', error);\n      setMessage(`Error al guardar: ${error.response?.data?.error || error.message}`);\n    }\n  };\n\n  const days = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\n\n  return (\n    <Box sx={{ backgroundColor: '#2563EB', minHeight: '100vh' }}>\n      <Header />\n      <Box display=\"flex\">\n        <Sidebar selected=\"reservations\" />\n        <Box flexGrow={1} sx={{ padding: 3 }}>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"start\" mb={4}>\n            <h2 className=\"text-2xl font-poppins font-bold text-white\" style={{ marginTop: '0.5rem' }}>\n              Configuración de Reservas\n            </h2>\n            <div style={{ display: 'flex', alignItems: 'center', maxWidth: '480px' }}>\n              <ModuleStatus\n                moduleName=\"Reservas\"\n                active={moduloReservas}\n                onToggle={handleToggleReservas}\n              />\n            </div>\n          </Box>\n          <Box sx={{ backgroundColor: 'white', padding: 6, borderRadius: 8, boxShadow: '0 0 7px 7px rgba(0,0,0,0.2)' }}>\n            <Typography variant=\"h6\" sx={{ fontFamily: 'Poppins', fontWeight: 'bold', mb: 4 }}>\n              Horarios de las Citas\n            </Typography>\n            <Box sx={{ border: '1px solid #e0e0e0', borderRadius: 4, p: 3 }}>\n              <Box sx={{ mb: 2, display: 'flex', alignItems: 'center', gap: 2 }}>\n                <AccessTimeIcon sx={{ color: '#2563EB' }} />\n                <Typography sx={{ fontFamily: 'Poppins', fontWeight: 'bold' }}>\n                  Horarios de Atención\n                </Typography>\n              </Box>\n              <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 2 }}>\n                {days.map((day) => (\n                  <Box key={day} sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Typography sx={{ width: 100, fontFamily: 'Poppins' }}>{day}</Typography>\n                    <input\n                      type=\"time\"\n                      value={appointmentHours[day].open}\n                      onChange={(e) => handleHoursChange(day, 'open', e.target.value)}\n                      className=\"p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-blue\"\n                    />\n                    <input\n                      type=\"time\"\n                      value={appointmentHours[day].close}\n                      onChange={(e) => handleHoursChange(day, 'close', e.target.value)}\n                      className=\"p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-blue\"\n                    />\n                  </Box>\n                ))}\n              </Box>\n            </Box>\n\n            <Typography variant=\"h6\" sx={{ fontFamily: 'Poppins', fontWeight: 'bold', mt: 4, mb: 2 }}>\n              Reservas Programadas\n            </Typography>\n            <Box sx={{ border: '1px solid #e0e0e0', borderRadius: 4, p: 3 }}>\n              <FullCalendar\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                initialView=\"timeGridWeek\"\n                events={reservations}\n                dateClick={handleDateClick}\n                slotMinTime=\"08:00:00\"\n                slotMaxTime=\"20:00:00\"\n                headerToolbar={{\n                  left: 'prev,next today',\n                  center: 'title',\n                  right: 'dayGridMonth,timeGridWeek,timeGridDay',\n                }}\n                height=\"auto\"\n                locale=\"es\"\n                eventColor=\"#34C759\"\n                eventTextColor=\"white\"\n                allDaySlot={false}\n              />\n            </Box>\n\n            <Box sx={{ mt: 4, display: 'flex', justifyContent: 'flex-end' }}>\n              <Button\n                onClick={saveSettings}\n                sx={{ backgroundColor: '#34C759', color: 'white', '&:hover': { backgroundColor: '#2EA44F' } }}\n              >\n                Guardar Cambios\n              </Button>\n            </Box>\n            {message && (\n              <Typography sx={{ mt: 2, color: message.includes('Error') ? 'red' : 'green' }}>\n                {message}\n              </Typography>\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ReservationsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AACvD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAOC,cAAc,MAAM,gCAAgC;;AAE3D;;AAOA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAU,CAAC,GAAGN,UAAU,CAAC,CAAC;EAClC,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAU,KAAK,CAAC;EACpE,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAkD;IACxGwB,KAAK,EAAE;MAAEC,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAC;IACxCC,MAAM,EAAE;MAAEF,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAC;IACzCE,SAAS,EAAE;MAAEH,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAC;IAC5CG,MAAM,EAAE;MAAEJ,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAC;IACzCI,OAAO,EAAE;MAAEL,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAC;IAC1CK,MAAM,EAAE;MAAEN,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAC;IACzCM,OAAO,EAAE;MAAEP,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ;EAC3C,CAAC,CAAC;EACF,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAkB,EAAE,CAAC;EACrE,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAS,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,IAAIkB,SAAS,KAAK,IAAI,EAAE;MACtBP,KAAK,CACFyB,GAAG,CAAkB,qCAAqClB,SAAS,EAAE,CAAC,CACtEmB,IAAI,CAAEC,GAAG,IAAK;QACblB,iBAAiB,CAAC,CAAC,CAACkB,GAAG,CAACC,IAAI,CAACC,eAAe,CAAC;QAC7C,IAAIF,GAAG,CAACC,IAAI,CAACE,cAAc,EAAE;UAC3B,IAAI;YACF,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACN,GAAG,CAACC,IAAI,CAACE,cAAc,CAAC;YACvD,MAAMI,IAAI,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;YACvF,MAAMC,YAAY,GAAGD,IAAI,CAACE,KAAK,CAACC,GAAG,IACjCN,WAAW,CAACM,GAAG,CAAC,IAAI,OAAON,WAAW,CAACM,GAAG,CAAC,KAAK,QAAQ,IAAI,MAAM,IAAIN,WAAW,CAACM,GAAG,CAAC,IAAI,OAAO,IAAIN,WAAW,CAACM,GAAG,CACtH,CAAC;YACD,IAAIF,YAAY,EAAExB,mBAAmB,CAACoB,WAAW,CAAC;UACpD,CAAC,CAAC,OAAOO,CAAC,EAAE;YACVC,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEF,CAAC,CAAC;UACzD;QACF;QACA,IAAIX,GAAG,CAACC,IAAI,CAACa,QAAQ,EAAE;UACrBnB,eAAe,CAACK,GAAG,CAACC,IAAI,CAACa,QAAQ,CAACC,GAAG,CAAEC,OAAO,KAAM;YAClDC,EAAE,EAAED,OAAO,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;YACzBC,KAAK,EAAE,SAAS;YAChBC,KAAK,EAAE,IAAIC,IAAI,CAACL,OAAO,CAACM,YAAY,CAAC;YACrCC,GAAG,EAAE,IAAIF,IAAI,CAACL,OAAO,CAACQ,SAAS;UACjC,CAAC,CAAC,CAAC,CAAC;QACN;MACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdd,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEa,GAAG,CAAC;QACzD5C,iBAAiB,CAAC,KAAK,CAAC;MAC1B,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAEf,MAAM+C,oBAAoB,GAAIC,WAAoB,IAAK;IACrD,IAAIhD,SAAS,IAAI,IAAI,EAAE;IACvBP,KAAK,CACFwD,IAAI,CAAC,sDAAsD,EAAE;MAAEjD,SAAS;MAAEC,cAAc,EAAE+C;IAAY,CAAC,CAAC,CACxG7B,IAAI,CAAC,MAAM;MACVjB,iBAAiB,CAAC8C,WAAW,CAAC;IAChC,CAAC,CAAC,CACDH,KAAK,CAACC,GAAG,IAAI;MACZd,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAEa,GAAG,CAAC;IAC/D,CAAC,CAAC;EACN,CAAC;EAED,MAAMI,iBAAiB,GAAGA,CAACpB,GAAW,EAAEqB,KAAuB,EAAEC,KAAa,KAAK;IACjFhD,mBAAmB,CAACiD,IAAI,KAAK;MAC3B,GAAGA,IAAI;MACP,CAACvB,GAAG,GAAG;QAAE,GAAGuB,IAAI,CAACvB,GAAG,CAAC;QAAE,CAACqB,KAAK,GAAGC;MAAM;IACxC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,eAAe,GAAIC,IAAqC,IAAK;IACjE,MAAMC,OAAO,GAAGD,IAAI,CAACC,OAAO;IAC5B,MAAMC,SAAS,GAAG,IAAIhB,IAAI,CAACe,OAAO,CAAC,CAACE,cAAc,CAAC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;IACrH,MAAMC,WAAW,GAAG5D,gBAAgB,CAACsD,SAAS,CAAC;IAC/C,IAAI,CAACM,WAAW,EAAE;IAElB,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGF,WAAW,CAACzD,IAAI,CAAC4D,KAAK,CAAC,GAAG,CAAC,CAAC/B,GAAG,CAACgC,MAAM,CAAC;IACxE,MAAM,CAACC,OAAO,EAAEC,SAAS,CAAC,GAAGN,WAAW,CAACxD,KAAK,CAAC2D,KAAK,CAAC,GAAG,CAAC,CAAC/B,GAAG,CAACgC,MAAM,CAAC;IACrE,MAAMG,WAAW,GAAGf,IAAI,CAACgB,IAAI,CAACC,QAAQ,CAAC,CAAC;IACxC,MAAMC,aAAa,GAAGlB,IAAI,CAACgB,IAAI,CAACG,UAAU,CAAC,CAAC;IAE5C,MAAMC,oBAAoB,GAAGL,WAAW,GAAG,EAAE,GAAGG,aAAa;IAC7D,MAAMG,kBAAkB,GAAGZ,SAAS,GAAG,EAAE,GAAGC,WAAW;IACvD,MAAMY,gBAAgB,GAAGT,OAAO,GAAG,EAAE,GAAGC,SAAS;IAEjD,IAAIM,oBAAoB,GAAGC,kBAAkB,IAAID,oBAAoB,GAAGE,gBAAgB,EAAE;MACxF5D,UAAU,CAAC,2CAA2C8C,WAAW,CAACzD,IAAI,MAAMyD,WAAW,CAACxD,KAAK,EAAE,CAAC;MAChG;IACF;IAEA,MAAMuE,cAAc,GAAG;MACrBvC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAEe,IAAI,CAACgB,IAAI;MAChB5B,GAAG,EAAE,IAAIF,IAAI,CAACc,IAAI,CAACgB,IAAI,CAACQ,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAE;IACvD,CAAC;IAED,IAAI/E,SAAS,IAAI,IAAI,EAAE;IACvBP,KAAK,CACFwD,IAAI,CAAiB,sCAAsCjD,SAAS,EAAE,EAAE;MACvE0C,YAAY,EAAEoC,cAAc,CAACtC,KAAK,CAACwC,WAAW,CAAC,CAAC;MAChDpC,SAAS,EAAEkC,cAAc,CAACnC,GAAG,CAACqC,WAAW,CAAC;IAC5C,CAAC,CAAC,CACD7D,IAAI,CAAEC,GAAG,IAAK;MACbL,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE;QAAE,GAAGgE,cAAc;QAAEzC,EAAE,EAAEjB,GAAG,CAACC,IAAI,CAACgB,EAAE,CAACC,QAAQ,CAAC;MAAE,CAAC,CAAC,CAAC;MACrFrB,UAAU,CAAC,2BAA2B,CAAC;IACzC,CAAC,CAAC,CACD4B,KAAK,CAAEC,GAAG,IAAK;MACdd,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEa,GAAG,CAAC;MAC9C7B,UAAU,CAAC,yBAAyB,CAAC;IACvC,CAAC,CAAC;EACN,CAAC;EAED,MAAMgE,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIjF,SAAS,IAAI,IAAI,EAAE;IACvB,IAAI;MACF,MAAMP,KAAK,CAACyF,GAAG,CAAC,sCAAsClF,SAAS,EAAE,EAAE;QACjEuB,cAAc,EAAEE,IAAI,CAAC0D,SAAS,CAAChF,gBAAgB;MACjD,CAAC,CAAC;MACFc,UAAU,CAAC,8CAA8C,CAAC;IAC5D,CAAC,CAAC,OAAOgB,KAAU,EAAE;MAAA,IAAAmD,eAAA,EAAAC,oBAAA;MACnBrD,OAAO,CAACC,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACnEhB,UAAU,CAAC,qBAAqB,EAAAmE,eAAA,GAAAnD,KAAK,CAACqD,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgB/D,IAAI,cAAAgE,oBAAA,uBAApBA,oBAAA,CAAsBpD,KAAK,KAAIA,KAAK,CAACjB,OAAO,EAAE,CAAC;IACjF;EACF,CAAC;EAED,MAAMW,IAAI,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;EAEvF,oBACE9B,OAAA,CAACd,GAAG;IAACwG,EAAE,EAAE;MAAEC,eAAe,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC1D7F,OAAA,CAACP,MAAM;MAAAqG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjG,OAAA,CAACd,GAAG;MAACgH,OAAO,EAAC,MAAM;MAAAL,QAAA,gBACjB7F,OAAA,CAACN,OAAO;QAACyG,QAAQ,EAAC;MAAc;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCjG,OAAA,CAACd,GAAG;QAACkH,QAAQ,EAAE,CAAE;QAACV,EAAE,EAAE;UAAEW,OAAO,EAAE;QAAE,CAAE;QAAAR,QAAA,gBACnC7F,OAAA,CAACd,GAAG;UAACgH,OAAO,EAAC,MAAM;UAACI,cAAc,EAAC,eAAe;UAACC,UAAU,EAAC,OAAO;UAACC,EAAE,EAAE,CAAE;UAAAX,QAAA,gBAC1E7F,OAAA;YAAIyG,SAAS,EAAC,4CAA4C;YAACC,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAS,CAAE;YAAAd,QAAA,EAAC;UAE3F;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLjG,OAAA;YAAK0G,KAAK,EAAE;cAAER,OAAO,EAAE,MAAM;cAAEK,UAAU,EAAE,QAAQ;cAAEK,QAAQ,EAAE;YAAQ,CAAE;YAAAf,QAAA,eACvE7F,OAAA,CAACL,YAAY;cACXkH,UAAU,EAAC,UAAU;cACrBC,MAAM,EAAE1G,cAAe;cACvB2G,QAAQ,EAAE7D;YAAqB;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNjG,OAAA,CAACd,GAAG;UAACwG,EAAE,EAAE;YAAEC,eAAe,EAAE,OAAO;YAAEU,OAAO,EAAE,CAAC;YAAEW,YAAY,EAAE,CAAC;YAAEC,SAAS,EAAE;UAA8B,CAAE;UAAApB,QAAA,gBAC3G7F,OAAA,CAACb,UAAU;YAAC+H,OAAO,EAAC,IAAI;YAACxB,EAAE,EAAE;cAAEyB,UAAU,EAAE,SAAS;cAAEC,UAAU,EAAE,MAAM;cAAEZ,EAAE,EAAE;YAAE,CAAE;YAAAX,QAAA,EAAC;UAEnF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbjG,OAAA,CAACd,GAAG;YAACwG,EAAE,EAAE;cAAE2B,MAAM,EAAE,mBAAmB;cAAEL,YAAY,EAAE,CAAC;cAAEM,CAAC,EAAE;YAAE,CAAE;YAAAzB,QAAA,gBAC9D7F,OAAA,CAACd,GAAG;cAACwG,EAAE,EAAE;gBAAEc,EAAE,EAAE,CAAC;gBAAEN,OAAO,EAAE,MAAM;gBAAEK,UAAU,EAAE,QAAQ;gBAAEgB,GAAG,EAAE;cAAE,CAAE;cAAA1B,QAAA,gBAChE7F,OAAA,CAACF,cAAc;gBAAC4F,EAAE,EAAE;kBAAE8B,KAAK,EAAE;gBAAU;cAAE;gBAAA1B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC5CjG,OAAA,CAACb,UAAU;gBAACuG,EAAE,EAAE;kBAAEyB,UAAU,EAAE,SAAS;kBAAEC,UAAU,EAAE;gBAAO,CAAE;gBAAAvB,QAAA,EAAC;cAE/D;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,eACNjG,OAAA,CAACd,GAAG;cAACwG,EAAE,EAAE;gBAAEQ,OAAO,EAAE,MAAM;gBAAEuB,mBAAmB,EAAE;kBAAEC,EAAE,EAAE,KAAK;kBAAEC,EAAE,EAAE;gBAAU,CAAC;gBAAEJ,GAAG,EAAE;cAAE,CAAE;cAAA1B,QAAA,EACrF/D,IAAI,CAACQ,GAAG,CAAEL,GAAG,iBACZjC,OAAA,CAACd,GAAG;gBAAWwG,EAAE,EAAE;kBAAEQ,OAAO,EAAE,MAAM;kBAAEK,UAAU,EAAE,QAAQ;kBAAEgB,GAAG,EAAE;gBAAE,CAAE;gBAAA1B,QAAA,gBACnE7F,OAAA,CAACb,UAAU;kBAACuG,EAAE,EAAE;oBAAEkC,KAAK,EAAE,GAAG;oBAAET,UAAU,EAAE;kBAAU,CAAE;kBAAAtB,QAAA,EAAE5D;gBAAG;kBAAA6D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAa,CAAC,eACzEjG,OAAA;kBACE6H,IAAI,EAAC,MAAM;kBACXtE,KAAK,EAAEjD,gBAAgB,CAAC2B,GAAG,CAAC,CAACxB,IAAK;kBAClCqH,QAAQ,EAAG5F,CAAC,IAAKmB,iBAAiB,CAACpB,GAAG,EAAE,MAAM,EAAEC,CAAC,CAAC6F,MAAM,CAACxE,KAAK,CAAE;kBAChEkD,SAAS,EAAC;gBAA+F;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1G,CAAC,eACFjG,OAAA;kBACE6H,IAAI,EAAC,MAAM;kBACXtE,KAAK,EAAEjD,gBAAgB,CAAC2B,GAAG,CAAC,CAACvB,KAAM;kBACnCoH,QAAQ,EAAG5F,CAAC,IAAKmB,iBAAiB,CAACpB,GAAG,EAAE,OAAO,EAAEC,CAAC,CAAC6F,MAAM,CAACxE,KAAK,CAAE;kBACjEkD,SAAS,EAAC;gBAA+F;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1G,CAAC;cAAA,GAbMhE,GAAG;gBAAA6D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAcR,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENjG,OAAA,CAACb,UAAU;YAAC+H,OAAO,EAAC,IAAI;YAACxB,EAAE,EAAE;cAAEyB,UAAU,EAAE,SAAS;cAAEC,UAAU,EAAE,MAAM;cAAEY,EAAE,EAAE,CAAC;cAAExB,EAAE,EAAE;YAAE,CAAE;YAAAX,QAAA,EAAC;UAE1F;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbjG,OAAA,CAACd,GAAG;YAACwG,EAAE,EAAE;cAAE2B,MAAM,EAAE,mBAAmB;cAAEL,YAAY,EAAE,CAAC;cAAEM,CAAC,EAAE;YAAE,CAAE;YAAAzB,QAAA,eAC9D7F,OAAA,CAACX,YAAY;cACX4I,OAAO,EAAE,CAAC3I,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,CAAE;cAC5D0I,WAAW,EAAC,cAAc;cAC1BC,MAAM,EAAElH,YAAa;cACrBmH,SAAS,EAAE3E,eAAgB;cAC3B4E,WAAW,EAAC,UAAU;cACtBC,WAAW,EAAC,UAAU;cACtBC,aAAa,EAAE;gBACbC,IAAI,EAAE,iBAAiB;gBACvBC,MAAM,EAAE,OAAO;gBACfC,KAAK,EAAE;cACT,CAAE;cACFC,MAAM,EAAC,MAAM;cACbC,MAAM,EAAC,IAAI;cACXC,UAAU,EAAC,SAAS;cACpBC,cAAc,EAAC,OAAO;cACtBC,UAAU,EAAE;YAAM;cAAAjD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENjG,OAAA,CAACd,GAAG;YAACwG,EAAE,EAAE;cAAEsC,EAAE,EAAE,CAAC;cAAE9B,OAAO,EAAE,MAAM;cAAEI,cAAc,EAAE;YAAW,CAAE;YAAAT,QAAA,eAC9D7F,OAAA,CAACZ,MAAM;cACL4J,OAAO,EAAE5D,YAAa;cACtBM,EAAE,EAAE;gBAAEC,eAAe,EAAE,SAAS;gBAAE6B,KAAK,EAAE,OAAO;gBAAE,SAAS,EAAE;kBAAE7B,eAAe,EAAE;gBAAU;cAAE,CAAE;cAAAE,QAAA,EAC/F;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EACL9E,OAAO,iBACNnB,OAAA,CAACb,UAAU;YAACuG,EAAE,EAAE;cAAEsC,EAAE,EAAE,CAAC;cAAER,KAAK,EAAErG,OAAO,CAAC8H,QAAQ,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG;YAAQ,CAAE;YAAApD,QAAA,EAC3E1E;UAAO;YAAA2E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACb;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/F,EAAA,CAzNID,gBAA0B;EAAA,QACRJ,UAAU;AAAA;AAAAqJ,EAAA,GAD5BjJ,gBAA0B;AA2NhC,eAAeA,gBAAgB;AAAC,IAAAiJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}