{"ast":null,"code":"var _jsxFileName = \"/Users/francoferrari/Desktop/ITBA/IngeSoft/autowhapp/autowhapp-dashboard/src/components/BotStatus.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, Switch } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotStatus = () => {\n  _s();\n  const [isActive, setIsActive] = useState(true);\n  const [message, setMessage] = useState('');\n  const handleToggle = () => {\n    const newStatus = !isActive;\n    setIsActive(newStatus);\n    // Simular el guardado y la notificación a n8n\n    setMessage(`Bot ${newStatus ? 'encendido' : 'apagado'} con éxito (simulado)`);\n    console.log('Simulando envío a n8n:', {\n      isActive: newStatus\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      boxShadow: '0 4px 12px rgba(0,0,0,0.10)',\n      borderRadius: '16px',\n      px: 4,\n      py: 2,\n      // padding-horizontal y menos padding arriba/abajo\n      minWidth: 360,\n      maxWidth: 450,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 2,\n        p: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          fontFamily: 'Poppins',\n          fontWeight: 'bold',\n          mr: 3,\n          minWidth: 120\n        },\n        children: \"Estado del Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        checked: isActive,\n        onChange: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontFamily: 'Poppins',\n          ml: 1,\n          mr: 2\n        },\n        children: isActive ? 'Encendido' : 'Apagado'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: message.includes('Error') ? 'red' : 'green',\n          ml: 2,\n          fontSize: 15\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(BotStatus, \"3kHAC38kbi1AW4u98wwR0wYYjrc=\");\n_c = BotStatus;\nexport default BotStatus;\nvar _c;\n$RefreshReg$(_c, \"BotStatus\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","Switch","jsxDEV","_jsxDEV","BotStatus","_s","isActive","setIsActive","message","setMessage","handleToggle","newStatus","console","log","sx","boxShadow","borderRadius","px","py","minWidth","maxWidth","display","alignItems","children","gap","p","variant","fontFamily","fontWeight","mr","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","ml","color","includes","fontSize","_c","$RefreshReg$"],"sources":["/Users/francoferrari/Desktop/ITBA/IngeSoft/autowhapp/autowhapp-dashboard/src/components/BotStatus.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, Typography, Switch } from '@mui/material';\n\nconst BotStatus: React.FC = () => {\n  const [isActive, setIsActive] = useState<boolean>(true);\n  const [message, setMessage] = useState<string>('');\n\n  const handleToggle = () => {\n    const newStatus = !isActive;\n    setIsActive(newStatus);\n    // Simular el guardado y la notificación a n8n\n    setMessage(`Bot ${newStatus ? 'encendido' : 'apagado'} con éxito (simulado)`);\n    console.log('Simulando envío a n8n:', { isActive: newStatus });\n  };\n\n  return (\n    <Card \n  sx={{ \n    boxShadow: '0 4px 12px rgba(0,0,0,0.10)', \n    borderRadius: '16px', \n    px: 4, py: 2,    // padding-horizontal y menos padding arriba/abajo\n    minWidth: 360,\n    maxWidth: 450,\n    display: 'flex',\n    alignItems: 'center',\n  }}\n>\n  <CardContent sx={{ display: 'flex', alignItems: 'center', gap: 2, p: 0 }}>\n    <Typography\n      variant=\"h6\"\n      sx={{ fontFamily: 'Poppins', fontWeight: 'bold', mr: 3, minWidth: 120 }}\n    >\n      Estado del Bot\n    </Typography>\n    <Switch checked={isActive} onChange={handleToggle} />\n    <Typography sx={{ fontFamily: 'Poppins', ml: 1, mr: 2 }}>\n      {isActive ? 'Encendido' : 'Apagado'}\n    </Typography>\n    {message && (\n      <Typography\n        sx={{\n          color: message.includes('Error') ? 'red' : 'green',\n          ml: 2,\n          fontSize: 15,\n        }}\n      >\n        {message}\n      </Typography>\n    )}\n  </CardContent>\n</Card>\n  );\n};\n\nexport default BotStatus;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAU,IAAI,CAAC;EACvD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAElD,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAG,CAACL,QAAQ;IAC3BC,WAAW,CAACI,SAAS,CAAC;IACtB;IACAF,UAAU,CAAC,OAAOE,SAAS,GAAG,WAAW,GAAG,SAAS,uBAAuB,CAAC;IAC7EC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE;MAAEP,QAAQ,EAAEK;IAAU,CAAC,CAAC;EAChE,CAAC;EAED,oBACER,OAAA,CAACL,IAAI;IACPgB,EAAE,EAAE;MACFC,SAAS,EAAE,6BAA6B;MACxCC,YAAY,EAAE,MAAM;MACpBC,EAAE,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAK;MACjBC,QAAQ,EAAE,GAAG;MACbC,QAAQ,EAAE,GAAG;MACbC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,eAEFpB,OAAA,CAACJ,WAAW;MAACe,EAAE,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEE,GAAG,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MAAAF,QAAA,gBACvEpB,OAAA,CAACH,UAAU;QACT0B,OAAO,EAAC,IAAI;QACZZ,EAAE,EAAE;UAAEa,UAAU,EAAE,SAAS;UAAEC,UAAU,EAAE,MAAM;UAAEC,EAAE,EAAE,CAAC;UAAEV,QAAQ,EAAE;QAAI,CAAE;QAAAI,QAAA,EACzE;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb9B,OAAA,CAACF,MAAM;QAACiC,OAAO,EAAE5B,QAAS;QAAC6B,QAAQ,EAAEzB;MAAa;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrD9B,OAAA,CAACH,UAAU;QAACc,EAAE,EAAE;UAAEa,UAAU,EAAE,SAAS;UAAES,EAAE,EAAE,CAAC;UAAEP,EAAE,EAAE;QAAE,CAAE;QAAAN,QAAA,EACrDjB,QAAQ,GAAG,WAAW,GAAG;MAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,EACZzB,OAAO,iBACNL,OAAA,CAACH,UAAU;QACTc,EAAE,EAAE;UACFuB,KAAK,EAAE7B,OAAO,CAAC8B,QAAQ,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,OAAO;UAClDF,EAAE,EAAE,CAAC;UACLG,QAAQ,EAAE;QACZ,CAAE;QAAAhB,QAAA,EAEDf;MAAO;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEP,CAAC;AAAC5B,EAAA,CAjDID,SAAmB;AAAAoC,EAAA,GAAnBpC,SAAmB;AAmDzB,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}